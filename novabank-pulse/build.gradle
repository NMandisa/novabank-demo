buildscript {
    repositories {
        mavenCentral() // Ensure repositories are defined for resolving buildscript dependencies
    }
    dependencies {
        classpath "org.jacoco:org.jacoco.core:0.8.12"
        classpath "org.jacoco:org.jacoco.agent:0.8.12"
    }
}

plugins {
    id 'java'
    id 'project-report'
    id 'jacoco'
    //id 'org.sonarqube'
}

description = 'novabank'
group = 'za.co.novabank'
version = '0.0.1-SNAPSHOT'

allprojects {
    group = 'za.co.novabank'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral() // Ensures all subprojects have access to repositories
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }
    test {
        useJUnitPlatform()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'project-report'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral() // Ensures each subproject can resolve dependencies
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    dependencies {
        implementation(group: 'org.springframework', name: 'spring-core', version: '6.1.11') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework', name: 'spring-aop', version: '6.1.11') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework', name: 'spring-aspects', version: '6.1.11') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework.cloud', name: 'spring-cloud-context', version: '4.1.4') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework.cloud', name: 'spring-cloud-commons', version: '4.1.4') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework', name: 'spring-context-support', version: '6.1.11') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework', name: 'spring-beans', version: '6.1.11') {
            exclude(module: 'commons-logging')
        }
        // Log4j 2 dependencies
        implementation(group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0') {
            exclude(module: 'mail')
            exclude(module: 'jms')
            exclude(module: 'jmxtools')
            exclude(module: 'jmxri')
        }
        /*implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
        implementation(group: 'org.slf4j', name: 'jcl-over-slf4j', version: '2.0.7')
        implementation(group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7')
        implementation(group: 'org.slf4j', name: 'jcl-over-slf4j', version: '2.0.7')
        implementation(group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.7')*/

        // Log4j 2 dependencies
        implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
        implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'

        //implementation 'org.appenders.log4j:log4j2-elasticsearch-core:2.4.3'

        // Additional dependencies
        implementation(group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.23.1')
        implementation(group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7')
        implementation(group: 'org.slf4j', name: 'jcl-over-slf4j', version: '2.0.7')
        implementation(group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.7')

        // Test dependencies
        testImplementation(platform('org.junit:junit-bom:5.10.0'))
        testImplementation('org.junit.jupiter:junit-jupiter')
        testImplementation('org.springframework.security:spring-security-test:6.3.1') {
            exclude(module: 'commons-logging') }
        testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.3')
        testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.10.3')
        testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.10.3')
        testImplementation(group: 'org.springframework', name: 'spring-test', version: '6.1.10')
        testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.3')
        testImplementation(group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.12.0')
        testImplementation 'org.jacoco:org.jacoco.agent:0.8.12'

        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        testCompileOnly 'org.projectlombok:lombok:1.18.30'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    }
}

/*test {
    useJUnitPlatform()
}*/

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

htmlDependencyReport {
    projects = project.allprojects
}

/*
sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', 'your_sonarqube_token'
        property 'sonar.projectKey', 'za.co.novabank.core'
        property 'sonar.projectName', 'Novabank Core'
        property 'sonar.projectVersion', '0.0.1-SNAPSHOT'
        property 'sonar.java.binaries', 'build/classes'
        property 'sonar.java.libraries', 'build/libs/*'
        property 'sonar.java.test.binaries', 'build/test-classes'
        property 'sonar.java.test.libraries', 'build/test/libs/*'
    }
}*/
